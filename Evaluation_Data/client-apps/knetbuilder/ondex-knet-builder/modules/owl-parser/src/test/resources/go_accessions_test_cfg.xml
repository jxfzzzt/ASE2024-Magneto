<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<description><![CDATA[Test configuration used to test accession mappings]]></description>

	<import resource="obo_common_mappings.xml" />

	<!-- Let's reset this again, we're not intereseted in names while doing these tests -->
	<bean id = "altNamesMapper" factory-bean = "nullBeanFactory" factory-method = "get" />


	<bean id = "owlMapper" parent = "defaultOwlMapper">
		<!-- Let's scan from BioProcess only for these tests -->
		<property name = "rootsScanner">
			<bean class = "net.sourceforge.ondex.parser.owl.IriBasedRootsScanner">
				<property name = "topClassIri" value = "#{ns.iri ( 'obo:GO_0008150' )}" /><!-- BioProcess -->
			</bean>
		</property>
		<!-- The top OWL class maps to an ONDEX concept class and not to a concpet -->
		<property name = "doMapRootsToConcepts" value = "false" />
	</bean>
		
					
	
	
	<bean id = "accessionsMapper" class = "net.sourceforge.ondex.parser.CompositeAccessionsMapper">
		<property name = "mappers">
			<set>
				<bean parent = "idAccMapper">
					<property name = "dataSourcePrefix" value="GO:" />
					<property name = "dataSourcesMapper" ref = "goDataSourcesMapper" />
				</bean>
				<bean parent = "altIdAccMapper">
					<property name = "dataSourcePrefix" value="GO:" />
					<property name = "dataSourcesMapper" ref = "goDataSourcesMapper" />
				</bean>
				<ref bean = "wpXrefAccMapper" />

				<!-- This is to test the prefix replacement mechanism: 
				     'GO:' is first removed and then 'GenOnt:' is added to the ONDEX accession --> 
				<bean class = "net.sourceforge.ondex.parser.owl.OBOWLAccessionsMapper">
					<property name = "propertyIri" value = "#{ns.iri ( 'oboInOwl:id' )}" />
					<property name = "dataSourcePrefix" value="GO:" />
					<property name = "addedPrefix" value = "GenOnt:" />
					<property name = "dataSourcesMapper" ref = "goDataSourcesMapper" />
				</bean>
				<!-- And this is the variant where you both match a prefix and retain it: matched/added prefixes are the same -->				
				<bean class = "net.sourceforge.ondex.parser.owl.OBOWLAccessionsMapper">
					<property name = "propertyIri" value = "#{ns.iri ( 'oboInOwl:id' )}" />
					<property name = "dataSourcePrefix" value="GO:" />
					<property name = "addedPrefix" value = "GO:" />
					<property name = "dataSourcesMapper" ref = "goDataSourcesMapper" />
				</bean>				
			</set>
		</property>
	</bean>

	<bean id = "goDataSourcesMapper" class = "net.sourceforge.ondex.parser.ConstDataSourcesMapper">
		<property name="value">
			<bean class = "net.sourceforge.ondex.core.util.prototypes.DataSourcePrototype">
				<property name="id" value = "GO" />
				<property name="fullName" value = "Gene Ontology" />
			</bean>
		</property>
	</bean>	
			
</beans>
